# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vP9zmUnh-B_d-7nFrrTdxvgh0cK9GgDV

# Task
write a pythen code for ev makers place wise to get chart

Here is all the data you need:
"EV Maker by Place.csv.xlsx"

## Data loading

### Subtask:
Load the data from "EV Maker by Place.csv.xlsx" into a dataframe.

**Reasoning**:
Import the pandas library and load the Excel file into a DataFrame.
"""

import pandas as pd

df = pd.read_excel("EV Maker by Place.csv.xlsx")
df.head()

import pandas as pd

df = pd.read_excel("EV Maker by Place.csv.xlsx")
df.head()
print("Missing values before cleaning:")
print(df[['Place', 'EV Maker']].isnull().sum())

# Drop rows with missing values in 'Place' or 'EV Maker'
df.dropna(subset=['Place', 'EV Maker'], inplace=True)

print("\nMissing values after dropping rows:")
print(df[['Place', 'EV Maker']].isnull().sum())

# Check for and remove duplicate rows
initial_rows = df.shape[0]
df.drop_duplicates(inplace=True)
rows_after_dropping_duplicates = df.shape[0]

print(f"\nNumber of rows before dropping duplicates: {initial_rows}")
print(f"Number of rows after dropping duplicates: {rows_after_dropping_duplicates}")

df.head()
df['Place'] = df['Place'].str.lower().str.strip()
df['EV Maker'] = df['EV Maker'].str.lower().str.strip()

print("Unique values in 'Place' after standardization:")
print(df['Place'].unique())
print("\nUnique values in 'EV Maker' after standardization:")
print(df['EV Maker'].unique())
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(20, 8))
ev_maker_counts_by_place.plot(kind='bar', stacked=True, figsize=(20, 8))
plt.title('EV Maker Distribution by Place')
plt.xlabel('Place')
plt.ylabel('Number of EVs')
plt.xticks(rotation=90)
plt.legend(title='EV Maker', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

"""## Data cleaning

### Subtask:
Handle any potential missing values or inconsistencies in the 'Place' and EV Maker columns.

**Reasoning**:
Check for missing values in 'Place' and 'EV Maker' columns and handle them. Also, check for and remove duplicate rows.
"""

print("Missing values before cleaning:")
print(df[['Place', 'EV Maker']].isnull().sum())

# Drop rows with missing values in 'Place' or 'EV Maker'
df.dropna(subset=['Place', 'EV Maker'], inplace=True)

print("\nMissing values after dropping rows:")
print(df[['Place', 'EV Maker']].isnull().sum())

# Check for and remove duplicate rows
initial_rows = df.shape[0]
df.drop_duplicates(inplace=True)
rows_after_dropping_duplicates = df.shape[0]

print(f"\nNumber of rows before dropping duplicates: {initial_rows}")
print(f"Number of rows after dropping duplicates: {rows_after_dropping_duplicates}")

df.head()

"""**Reasoning**:
Standardize inconsistencies in 'Place' and 'EV Maker' columns by converting them to lowercase and stripping leading/trailing whitespace.


"""

df['Place'] = df['Place'].str.lower().str.strip()
df['EV Maker'] = df['EV Maker'].str.lower().str.strip()

print("Unique values in 'Place' after standardization:")
print(df['Place'].unique())
print("\nUnique values in 'EV Maker' after standardization:")
print(df['EV Maker'].unique())

"""## Data analysis

### Subtask:
Group the data by 'Place' and count the occurrences of each 'EV Maker' within each place.

**Reasoning**:
Group the data by 'Place' and count the occurrences of each 'EV Maker' within each place.
"""

ev_maker_counts_by_place = df.groupby('Place')['EV Maker'].value_counts().unstack(fill_value=0)
display(ev_maker_counts_by_place)

"""## Data visualization

### Subtask:
Create a chart (e.g., stacked bar chart or grouped bar chart) to visualize the distribution of EV Makers across different places.

**Reasoning**:
Create a stacked bar chart to visualize the distribution of EV Makers across different places as requested in the subtask instructions, using the `ev_maker_counts_by_place` dataframe.
"""

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(20, 8))
ev_maker_counts_by_place.plot(kind='bar', stacked=True, figsize=(20, 8))
plt.title('EV Maker Distribution by Place')
plt.xlabel('Place')
plt.ylabel('Number of EVs')
plt.xticks(rotation=90)
plt.legend(title='EV Maker', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

"""## Summary:

### Data Analysis Key Findings

*   There were no missing values in the 'Place' or 'EV Maker' columns initially.
*   One duplicate row was found and removed, reducing the dataset from 62 to 61 rows.
*   The 'Place' and 'EV Maker' column values were standardized to lowercase and stripped of whitespace.
*   The analysis successfully grouped the data by 'Place' and counted the occurrences of each 'EV Maker', indicating the number of EVs from each maker in each location.

### Insights or Next Steps

*   The stacked bar chart provides a clear visual comparison of the market presence of different EV makers across various locations.
*   Further analysis could involve calculating the market share percentage of each EV maker within each place to understand their relative dominance.

"""